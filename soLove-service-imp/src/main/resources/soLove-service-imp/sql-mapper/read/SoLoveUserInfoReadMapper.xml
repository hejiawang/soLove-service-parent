<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wang.so.love.service.dao.read.SoLoveUserInfoReadDao">
	
	<resultMap id="BaseResultMap" type="com.wang.so.love.service.entity.SoLoveUserInfoImgEntity">
		<id column="userID" property="userID" jdbcType="INTEGER" />
		<result column="getChoiceNum" property="getChoiceNum" jdbcType="INTEGER" />
		<result column="setChoiceNum" property="setChoiceNum" jdbcType="INTEGER" />
		<result column="userIntegralTotal" property="userIntegralTotal" jdbcType="INTEGER" />
		<result column="userChoiceTotal" property="userChoiceTotal" jdbcType="INTEGER" />
		<result column="userChoiceNum" property="userChoiceNum" jdbcType="INTEGER" />
		<result column="userMaritalSuccess" property="userMaritalSuccess" jdbcType="VARCHAR" />
		<result column="userLevel" property="userLevel" jdbcType="VARCHAR" />
		<result column="loginName" property="loginName" jdbcType="VARCHAR" />
		<result column="passWord" property="passWord" jdbcType="VARCHAR" />
		<result column="registerDate" property="registerDate" jdbcType="TIMESTAMP"/>
		<result column="registerType" property="registerType" jdbcType="VARCHAR" />
		<result column="isCurrent" property="isCurrent" jdbcType="VARCHAR" />
		<result column="isDelete" property="isDelete" jdbcType="VARCHAR" />
	</resultMap>
	
	<sql id="getAllColumn">
		userID,getChoiceNum,setChoiceNum,
		userIntegralTotal,userChoiceTotal,userChoiceNum,
		userMaritalSuccess,userLevel,loginName,
		passWord,registerDate,registerType,
		isCurrent,isDelete
	</sql>
	
	<select id="checkLoginName" parameterType="com.wang.so.love.service.param.SoLoveUserInfoParam" resultType="java.lang.Integer">
		select count(1)
		from soLove_userInfo
		where loginName = #{loginName, jdbcType=VARCHAR}
	</select>
	
	<select id="getUserByMateInfo" resultType="com.wang.so.love.service.vo.SoLoveUserSimpleInfoVO" parameterType="com.wang.so.love.service.param.SoLoveMateInfoParam">
		select 
			a.userID as userID, b.userAge as userAge, b.userSex as userSex, b.userHeadImage as userHeadImage 
		from soLove_userInfo a
		inner join solove_userDetailInfo b
		<where>
			a.isCurrent = 'normal' 
			and a.isDelete = 'no'
			<if test=" mateSex!='' and mateSex!=null ">
				and b.userSex = #{mateSex, jdbcType=VARCHAR}
			</if>
			<if test=" mateAgeLevel != null ">
				<![CDATA[ and b.userAge >=  #{mateAgeLow, jdbcType=INTEGER} ]]>
				<![CDATA[ and b.userAge <=  #{mateAgeHigh, jdbcType=INTEGER} ]]>
			</if>
			<if test=" mateHeightLevel != null ">
				<![CDATA[ and b.userHeight >=  #{mateHeightLow, jdbcType=INTEGER} ]]>
				<![CDATA[ and b.userHeight <=  #{mateHeightHigh, jdbcType=INTEGER} ]]>
			</if>
			<if test=" mateEducation != null ">
				and b.userEducation = #{mateEducation, jdbcType=INTEGER}
			</if>
			<if test=" mateIncomeLevel != null ">
				and b.userIncomeLevel = #{mateIncomeLevel, jdbcType=INTEGER}
			</if>
			<if test=" mateMaritalStatus!='' and mateMaritalStatus!=null ">
				and b.userMaritalStatus = #{mateMaritalStatus, jdbcType=VARCHAR}
			</if>
			<if test=" mateHaveCar!='' and mateHaveCar!=null ">
				and b.userHaveCar = #{mateHaveCar, jdbcType=VARCHAR}
			</if>
			<if test=" mateHaveHome!='' and mateHaveHome!=null ">
				and b.userHaveHome = #{mateHaveHome, jdbcType=VARCHAR}
			</if>
			<if test=" mateHaveChildren!='' and mateHaveChildren=='yes' ">
				and ( select count(1) from solove_childrenInfo ci where ci.userID = a.userID ) > 0
			</if>
			<if test=" mateHaveChildren!='' and mateHaveChildren=='no' ">
				and ( select count(1) from solove_childrenInfo ci where ci.userID = a.userID ) = 0
			</if>
			<if test=" provinceID != null ">
				and b.provinceID = #{provinceID, jdbcType=INTEGER}
			</if>
			<if test=" cityID != null ">
				and b.cityID = #{cityID, jdbcType=INTEGER}
			</if>
			<if test=" countyID != null ">
				and b.countyID = #{countyID, jdbcType=INTEGER}
			</if>
			<if test=" townID != null ">
				and b.townID = #{townID, jdbcType=INTEGER}
			</if>
		</where>
		limit #{limitStart, jdbcType=INTEGER}, #{limitLength, jdbcType=INTEGER}
	</select>
	
</mapper>
